--insert data to suborder
CREATE OR REPLACE PROCEDURE INSERT_DATA_TO_SUBORDER(FOOD_ID IN NUMBER, QTY IN NUMBER, ORDER_ID IN NUMBER , SUPPLIER_ID IN NUMBER, STATUS IN VARCHAR2)
IS
BEGIN
    INSERT
    INTO SUBORDER_TABLE ( SUBORDER_FOOD_ID , SUBORDER_QTY , SUBORDER_ORDER_ID , SUBORDER_SUPPLIER_ID, SUBORDER_STATUS)
    VALUES ( FOOD_ID , QTY , ORDER_ID , SUPPLIER_ID , STATUS);
END INSERT_DATA_TO_SUBORDER;

--select suborder by order id
CREATE OR REPLACE PROCEDURE SELECT_SUBORDER_BY_ORDER_ID(ORDER_ID IN NUMBER , SUB_ORDER_RESULT OUT SYS_REFCURSOR)
AS
BEGIN
    OPEN SUB_ORDER_RESULT FOR
    SELECT SUBORDER_ID , SUBORDER_FOOD_ID , SUBORDER_QTY , SUBORDER_ORDER_ID , SUBORDER_SUPPLIER_ID , SUBORDER_STATUS
    FROM SUBORDER_TABLE
    WHERE SUBORDER_ORDER_ID = ORDER_ID;
END SELECT_SUBORDER_BY_ORDER_ID;

--select suborder by supplier id
CREATE OR REPLACE PROCEDURE SELECT_SUBORDER_BY_SUPPLIER_ID(SUPPLIER_ID IN NUMBER , SUB_ORDER_RESULT OUT SYS_REFCURSOR)
AS
BEGIN
    OPEN SUB_ORDER_RESULT FOR
    SELECT SUBORDER_ID , SUBORDER_FOOD_ID , SUBORDER_QTY , SUBORDER_ORDER_ID , SUBORDER_SUPPLIER_ID , SUBORDER_STATUS
    FROM SUBORDER_TABLE
    WHERE SUBORDER_SUPPLIER_ID = SUPPLIER_ID;
END SELECT_SUBORDER_BY_SUPPLIER_ID;

--update suborder status
CREATE OR REPLACE PROCEDURE UPDATE_SUBORDER_DATA(ID IN NUMBER, STATUS IN VARCHAR2)
IS
BEGIN
    UPDATE SUBORDER_TABLE
    SET SUBORDER_STATUS = STATUS
    WHERE SUBORDER_ID = ID;
END UPDATE_SUBORDER_DATA;

create or replace PROCEDURE get_most_sold_product(p_most_sold OUT SYS_REFCURSOR)
AS
BEGIN
    OPEN p_most_sold FOR
    SELECT SUBORDER_FOOD_ID, total_sold
FROM (
    SELECT SUBORDER_FOOD_ID, SUM(SUBORDER_QTY) AS total_sold
    FROM SUBORDER_TABLE
    GROUP BY SUBORDER_FOOD_ID
    ORDER BY total_sold DESC
)
WHERE ROWNUM <= 2;
END;


create or replace PROCEDURE get_sold_qty(food_id IN NUMBER, sold_qty OUT NUMBER)
AS
BEGIN
    SELECT SUM(SUBORDER_QTY) INTO sold_qty FROM suborder_table WHERE SUBORDER_FOOD_ID = food_id;
END;


